name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: [main]
    tags: ['**']

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: npm install, lint and build
        run: |
          npm ci
          npm run lint
          npm run build
        env:
          CI: ${{ true }}
      - name: Docker meta
        id: docker_meta
        if: "contains(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'"
        uses: docker/metadata-action@v4.0.1
        with:
          # list of Docker images to use as base name for tags
          images: ${{ github.repository }}
      - name: Login to DockerHub
        if: "contains(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker images
        if: "contains(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'"
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  create-release:
    needs: build
    if: "contains(github.ref, 'refs/tags/v')"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create or update release
        uses: meeDamian/github-release@2.0
        with:
          body: ${{ steps.release_changelog.outputs.changelog }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          allow_override: true
